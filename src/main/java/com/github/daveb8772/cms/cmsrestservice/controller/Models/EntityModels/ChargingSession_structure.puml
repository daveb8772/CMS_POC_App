@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": "",
    "treatFinalFieldsAsMandatory": false
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false, // root node is included
    "useMethodCallsForStructureDiagram": "ForwardOnly" // ForwardOnly, BothDirections, No
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "com.github.daveb8772.cms.cmsrestservice.controller.Models.EntityModels.ChargingSession",
  "extensionCallbackMethod": "" // qualified.class.name#methodName - signature: public static String method(String)
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_1245635613 { 
   	label=github
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   subgraph cluster_1638032187 { 
   	label=daveb8772
	labeljust=l
	fillcolor="#d8d8d8"
	style=filled
   
   ChargingSession1462292524[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)ChargingSession</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   connectorId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   cpId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   currentPower: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   endDate: LocalDateTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   energyDelivered: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   errors: List&lt;SessionError&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   meterRecords: List&lt;MeterRecord&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   sessionId: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   startDate: LocalDateTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   status: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tariffChanges: List&lt;TariffChange&gt; [0..*]</TD></TR>
<TR><TD ALIGN="LEFT" >-   transactionId: String [0..1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >+ addMeterRecords(meterRecord: MeterRecord)</TD></TR>
<TR><TD ALIGN="LEFT" >+ addTariffChange(tariffChange: TariffChange)</TD></TR>
<TR><TD ALIGN="LEFT" >+ calculateTotalChargedAmount(): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getDeltaMeterValueBetweenTimestamps(startTimestamp: LocalDateTime, endTimestamp: LocalDateTime): double</TD></TR>
<TR><TD ALIGN="LEFT" >+ getLastMeterValueAtTimestamp(targetTimestamp: LocalDateTime): double</TD></TR>
<TR><TD ALIGN="LEFT" >- getNextTariffChangeTimestamp(currentChange: TariffChange): LocalDateTime</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

MeterRecord1462292524[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)MeterRecord</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   chargingSession: ChargingSession [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   energyDelivered: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >+   recordTimestamp: LocalDateTime [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

SessionError1462292524[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)SessionError</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   chargingSession: ChargingSession [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   errorCode: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   errorMessage: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

Tariff1462292524[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Tariff</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   price: double [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tariffId: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   tariffName: String [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];

TariffChange1462292524[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)TariffChange</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   changeTimestamp: LocalDateTime [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   chargingSession: ChargingSession [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   id: Long [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   newTariff: Tariff [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   oldTariff: Tariff [0..1]</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 
} 

'edges    
ChargingSession1462292524 -> MeterRecord1462292524[label="meterRecords
[0..*]"];
ChargingSession1462292524 -> SessionError1462292524[label="errors
[0..*]"];
ChargingSession1462292524 -> TariffChange1462292524[label="tariffChanges
[0..*]"];
MeterRecord1462292524 -> ChargingSession1462292524[label="chargingSession
[0..1]"];
SessionError1462292524 -> ChargingSession1462292524[label="chargingSession
[0..1]"];
TariffChange1462292524 -> ChargingSession1462292524[label="chargingSession
[0..1]"];
TariffChange1462292524 -> Tariff1462292524[label="newTariff
[0..1]"];
TariffChange1462292524 -> Tariff1462292524[label="oldTariff
[0..1]"];
    
}
@enduml